import React from 'react';
import { render, screen, fireEvent, waitFor } from '@testing-library/react';
import { signIn } from 'next-auth/react';
import { ArtistFollowButton } from '@/components/artists/artist-follow-button';

// Mock next-auth
jest.mock('next-auth/react', () => ({
  signIn: jest.fn(),
  useSession: jest.fn(() => ({ data: null, status: 'unauthenticated' }))
}));

// Mock fetch
const mockFetch = jest.fn();
global.fetch = mockFetch;

describe('ArtistFollowButton', () => {
  let mockSignIn: jest.MockedFunction<typeof signIn>;

  beforeEach(() => {
    mockSignIn = signIn as jest.MockedFunction<typeof signIn>;
    mockSignIn.mockClear();
    mockFetch.mockClear();
  });

  it('calls the follow API and toggles state', async () => {
    mockFetch
      .mockResolvedValueOnce({
        ok: true,
        json: () => Promise.resolve({ success: true, isFollowing: true })
      })
      .mockResolvedValueOnce({
        ok: true,
        json: () => Promise.resolve({ success: true, isFollowing: false })
      });

    const callback = jest.fn();
    
    render(
      <ArtistFollowButton
        artistId="artist-1"
        initialFollowing={false}
        followerCount={4}
        onFollowChange={callback}
      />
    );

    const button = screen.getByRole('button', { name: '팔로우' });
    fireEvent.click(button);

    await waitFor(() => expect(button).toHaveAttribute('aria-pressed', 'true'));
    expect(button).toHaveTextContent('팔로잉');
    expect(callback).toHaveBeenCalledWith(5);

    // Test unfollow
    fireEvent.click(button);
    await waitFor(() => expect(button).toHaveAttribute('aria-pressed', 'false'));
    expect(mockFetch).toHaveBeenCalledTimes(2);
    expect(callback).toHaveBeenLastCalledWith(3);
  });

  it('redirects to sign in when not authenticated', async () => {
    mockFetch.mockResolvedValueOnce({
      ok: false,
      status: 401,
      json: () => Promise.resolve({ error: 'Unauthorized' })
    });

    render(
      <ArtistFollowButton
        artistId="artist-1"
        initialFollowing={false}
        followerCount={0}
        onFollowChange={jest.fn()}
      />
    );

    const button = screen.getByRole('button', { name: '팔로우' });
    fireEvent.click(button);

    await waitFor(() => expect(signIn).toHaveBeenCalled());
  });
});